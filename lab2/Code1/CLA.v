`include "KGP.v"
`include "KGPM.v"

module inarray(r1,r2,sum);
input[31:0] r1;
input[31:0] r2;
wire[1:0] w1 [32:0];

assign w1[0]=2'b00;

KGP a0(r1[0],r2[0],w1[1]);
KGP a1(r1[1],r2[1],w1[2]);
KGP a2(r1[2],r2[2],w1[3]);
KGP a3(r1[3],r2[3],w1[4]);
KGP a4(r1[4],r2[4],w1[5]);
KGP a5(r1[5],r2[5],w1[6]);
KGP a6(r1[6],r2[6],w1[7]);
KGP a7(r1[7],r2[7],w1[8]);
KGP a8(r1[8],r2[8],w1[9]);
KGP a9(r1[9],r2[9],w1[10]);
KGP a10(r1[10],r2[10],w1[11]);
KGP a11(r1[11],r2[11],w1[12]);
KGP a12(r1[12],r2[12],w1[13]);
KGP a13(r1[13],r2[13],w1[14]);
KGP a14(r1[14],r2[14],w1[15]);
KGP a15(r1[15],r2[15],w1[16]);
KGP a16(r1[16],r2[16],w1[17]);
KGP a17(r1[17],r2[17],w1[18]);
KGP a18(r1[18],r2[18],w1[19]);
KGP a19(r1[19],r2[19],w1[20]);
KGP a20(r1[20],r2[20],w1[21]);
KGP a21(r1[21],r2[21],w1[22]);
KGP a22(r1[22],r2[22],w1[23]);
KGP a23(r1[23],r2[23],w1[24]);
KGP a24(r1[24],r2[24],w1[25]);
KGP a25(r1[25],r2[25],w1[26]);
KGP a26(r1[26],r2[26],w1[27]);
KGP a27(r1[27],r2[27],w1[28]);
KGP a28(r1[28],r2[28],w1[29]);
KGP a29(r1[29],r2[29],w1[30]);
KGP a30(r1[30],r2[30],w1[31]);
KGP a31(r1[31],r2[31],w1[32]);

wire [1:0] w2 [32:0];
assign w2[0]=2'b00;


KGPM b1(w1[32],w1[31],w2[32]);
KGPM b2(w1[31],w1[30],w2[31]);
KGPM b3(w1[30],w1[29],w2[30]);
KGPM b4(w1[29],w1[28],w2[29]);
KGPM b5(w1[28],w1[27],w2[28]);
KGPM b6(w1[27],w1[26],w2[27]);
KGPM b7(w1[26],w1[25],w2[26]);
KGPM b8(w1[25],w1[24],w2[25]);
KGPM b9(w1[24],w1[23],w2[24]);
KGPM b10(w1[23],w1[22],w2[23]);
KGPM b11(w1[22],w1[21],w2[22]);
KGPM b12(w1[21],w1[20],w2[21]);
KGPM b13(w1[20],w1[19],w2[20]);
KGPM b14(w1[19],w1[18],w2[19]);
KGPM b15(w1[18],w1[17],w2[18]);
KGPM b16(w1[17],w1[16],w2[17]);
KGPM b17(w1[16],w1[15],w2[16]);
KGPM b18(w1[15],w1[14],w2[15]);
KGPM b19(w1[14],w1[13],w2[14]);
KGPM b20(w1[13],w1[12],w2[13]);
KGPM b21(w1[12],w1[11],w2[12]);
KGPM b22(w1[11],w1[10],w2[11]);
KGPM b23(w1[10],w1[9],w2[10]);
KGPM b24(w1[9],w1[8],w2[9]);
KGPM b25(w1[8],w1[7],w2[8]);
KGPM b26(w1[7],w1[6],w2[7]);
KGPM b27(w1[6],w1[5],w2[6]);
KGPM b28(w1[5],w1[4],w2[5]);
KGPM b29(w1[4],w1[3],w2[4]);
KGPM b30(w1[3],w1[2],w2[3]);
KGPM b31(w1[2],w1[1],w2[2]);
KGPM b32(w1[1],w1[0],w2[1]);

wire[1:0] w3 [32:0];
assign w3[0]=w2[0];
assign w3[1]=w2[1];


KGPM c1(w2[32],w2[30],w3[32]);
KGPM c2(w2[31],w2[29],w3[31]);
KGPM c3(w2[30],w2[28],w3[30]);
KGPM c4(w2[29],w2[27],w3[29]);
KGPM c5(w2[28],w2[26],w3[28]);
KGPM c6(w2[27],w2[25],w3[27]);
KGPM c7(w2[26],w2[24],w3[26]);
KGPM c8(w2[25],w2[23],w3[25]);
KGPM c9(w2[24],w2[22],w3[24]);
KGPM c10(w2[23],w2[21],w3[23]);
KGPM c11(w2[22],w2[20],w3[22]);
KGPM c12(w2[21],w2[19],w3[21]);
KGPM c13(w2[20],w2[18],w3[20]);
KGPM c14(w2[19],w2[17],w3[19]);
KGPM c15(w2[18],w2[16],w3[18]);
KGPM c31(w2[17],w2[15],w3[17]);
KGPM c16(w2[16],w2[14],w3[16]);
KGPM c17(w2[15],w2[13],w3[15]);
KGPM c18(w2[14],w2[12],w3[14]);
KGPM c19(w2[13],w2[11],w3[13]);
KGPM c20(w2[12],w2[10],w3[12]);
KGPM c21(w2[11],w2[9],w3[11]);
KGPM c22(w2[10],w2[8],w3[10]);
KGPM c23(w2[9],w2[7],w3[9]);
KGPM c24(w2[8],w2[6],w3[8]);
KGPM c25(w2[7],w2[5],w3[7]);
KGPM c26(w2[6],w2[4],w3[6]);
KGPM c27(w2[5],w2[3],w3[5]);
KGPM c28(w2[4],w2[2],w3[4]);
KGPM c29(w2[3],w2[1],w3[3]);
KGPM c30(w2[2],w2[0],w3[2]);

wire[1:0] w4 [32:0];
assign w4[0]=w3[0];
assign w4[1]=w3[1];
assign w4[2]=w3[2];
assign w4[3]=w3[3];

KGPM d1(w3[32],w3[28],w4[32]);
KGPM d2(w3[31],w3[27],w4[31]);
KGPM d3(w3[30],w3[26],w4[30]);
KGPM d4(w3[29],w3[25],w4[29]);
KGPM d5(w3[28],w3[24],w4[28]);
KGPM d6(w3[27],w3[23],w4[27]);
KGPM d7(w3[26],w3[22],w4[26]);
KGPM d8(w3[25],w3[21],w4[25]);
KGPM d9(w3[24],w3[20],w4[24]);
KGPM d10(w3[23],w3[19],w4[23]);
KGPM d11(w3[22],w3[18],w4[22]);
KGPM d12(w3[21],w3[17],w4[21]);
KGPM d13(w3[20],w3[16],w4[20]);
KGPM d14(w3[19],w3[15],w4[19]);
KGPM d15(w3[18],w3[14],w4[18]);
KGPM d16(w3[17],w3[13],w4[17]);
KGPM d17(w3[16],w3[12],w4[16]);
KGPM d18(w3[15],w3[11],w4[15]);
KGPM d19(w3[14],w3[10],w4[14]);
KGPM d20(w3[13],w3[9],w4[13]);
KGPM d21(w3[12],w3[8],w4[12]);
KGPM d22(w3[11],w3[7],w4[11]);
KGPM d23(w3[10],w3[6],w4[10]);
KGPM d24(w3[9],w3[5],w4[9]);
KGPM d25(w3[8],w3[4],w4[8]);
KGPM d26(w3[7],w3[3],w4[7]);
KGPM d27(w3[6],w3[2],w4[6]);
KGPM d28(w3[5],w3[1],w4[5]);
KGPM d29(w3[4],w3[0],w4[4]);


wire[1:0] w5 [32:0];
assign w5[0]=w4[0];
assign w5[1]=w4[1];
assign w5[2]=w4[2];
assign w5[3]=w4[3];
assign w5[4]=w4[4];
assign w5[5]=w4[5];
assign w5[6]=w4[6];
assign w5[7]=w4[7];

KGPM e1(w4[32],w4[24],w5[32]);
KGPM e2(w4[31],w4[23],w5[31]);
KGPM e3(w4[30],w4[22],w5[30]);
KGPM e4(w4[29],w4[21],w5[29]);
KGPM e5(w4[28],w4[20],w5[28]);
KGPM e6(w4[27],w4[19],w5[27]);
KGPM e7(w4[26],w4[18],w5[26]);
KGPM e8(w4[25],w4[17],w5[25]);
KGPM e9(w4[24],w4[16],w5[24]);
KGPM e10(w4[23],w4[15],w5[23]);
KGPM e11(w4[22],w4[14],w5[22]);
KGPM e12(w4[21],w4[13],w5[21]);
KGPM e13(w4[20],w4[12],w5[20]);
KGPM e14(w4[19],w4[11],w5[19]);
KGPM e15(w4[18],w4[10],w5[18]);
KGPM e16(w4[17],w4[9],w5[17]);
KGPM e17(w4[16],w4[8],w5[16]);
KGPM e18(w4[15],w4[7],w5[15]);
KGPM e19(w4[14],w4[6],w5[14]);
KGPM e20(w4[13],w4[5],w5[13]);
KGPM e21(w4[12],w4[4],w5[12]);
KGPM e22(w4[11],w4[3],w5[11]);
KGPM e23(w4[10],w4[2],w5[10]);
KGPM e24(w4[9],w4[1],w5[9]);
KGPM e25(w4[8],w4[0],w5[8]);

wire[1:0] w6 [32:0];
assign w6[0]=w5[0];
assign w6[1]=w5[1];
assign w6[2]=w5[2];
assign w6[3]=w5[3];
assign w6[4]=w5[4];
assign w6[5]=w5[5];
assign w6[6]=w5[6];
assign w6[7]=w5[7];
assign w6[8]=w5[8];
assign w6[9]=w5[9];
assign w6[10]=w5[10];
assign w6[11]=w5[11];
assign w6[12]=w5[12];
assign w6[13]=w5[13];
assign w6[14]=w5[14];
assign w6[15]=w5[15];

KGPM f1(w5[32],w5[16],w6[32]);
KGPM f2(w5[31],w5[15],w6[31]);
KGPM f3(w5[30],w5[14],w6[30]);
KGPM f4(w5[29],w5[13],w6[29]);
KGPM f5(w5[28],w5[12],w6[28]);
KGPM f6(w5[27],w5[11],w6[27]);
KGPM f7(w5[26],w5[10],w6[26]);
KGPM f8(w5[25],w5[9],w6[25]);
KGPM f9(w5[24],w5[8],w6[24]);
KGPM f10(w5[23],w5[7],w6[23]);
KGPM f11(w5[22],w5[6],w6[22]);
KGPM f12(w5[21],w5[5],w6[21]);
KGPM f13(w5[20],w5[4],w6[20]);
KGPM f14(w5[19],w5[3],w6[19]);
KGPM f15(w5[18],w5[2],w6[18]);
KGPM f16(w5[17],w5[1],w6[17]);
KGPM f17(w5[16],w5[0],w6[16]);


wire[1:0] w7 [32:0];
KGPM g1(w6[32],w6[0],w7[32]);

output[32:0] sum;
assign sum[0]=  w6[0][1]^r1[0]^r2[0];
assign sum[1]=  w6[1][1]^r1[1]^r2[1];
assign sum[2]=  w6[2][1]^r1[2]^r2[2];
assign sum[3]=  w6[3][1]^r1[3]^r2[3];
assign sum[4]=  w6[4][1]^r1[4]^r2[4];
assign sum[5]=  w6[5][1]^r1[5]^r2[5];
assign sum[6]=  w6[6][1]^r1[6]^r2[6];
assign sum[7]=  w6[7][1]^r1[7]^r2[7];
assign sum[8]=  w6[8][1]^r1[8]^r2[8];
assign sum[9]=  w6[9][1]^r1[9]^r2[9];
assign sum[10]= w6[10][1]^r1[10]^r2[10];
assign sum[11]= w6[11][1]^r1[11]^r2[11];
assign sum[12]= w6[12][1]^r1[12]^r2[12];
assign sum[13]= w6[13][1]^r1[13]^r2[13];
assign sum[14]= w6[14][1]^r1[14]^r2[14];
assign sum[15]= w6[15][1]^r1[15]^r2[15];
assign sum[16]= w6[16][1]^r1[16]^r2[16];
assign sum[17]= w6[17][1]^r1[17]^r2[17];
assign sum[18]= w6[18][1]^r1[18]^r2[18];
assign sum[19]= w6[19][1]^r1[19]^r2[19];
assign sum[20]= w6[20][1]^r1[20]^r2[20];
assign sum[21]= w6[21][1]^r1[21]^r2[21];
assign sum[22]= w6[22][1]^r1[22]^r2[22];
assign sum[23]= w6[23][1]^r1[23]^r2[23];
assign sum[24]= w6[24][1]^r1[24]^r2[24];
assign sum[25]= w6[25][1]^r1[25]^r2[25];
assign sum[26]= w6[26][1]^r1[26]^r2[26];
assign sum[27]= w6[27][1]^r1[27]^r2[27];
assign sum[28]= w6[28][1]^r1[28]^r2[28];
assign sum[29]= w6[29][1]^r1[29]^r2[29];
assign sum[30]= w6[30][1]^r1[30]^r2[30];
assign sum[31]= w6[31][1]^r1[31]^r2[31];
assign sum[32]= w7[32][1];

endmodule
